#!/usr/bin/perl
#
##############################################################################
#
# File Name:    extract - extractions cartes de visite -> Service Financier EPFL
# Maintainer:       Jérôme Cosandey (jerome.cosandey@epfl.ch) -
#
#########################################################################
#####
#
#

use lib '/opt/dinfo/lib/perl';

use strict;
use HTML::Entities ();
use Email::Stuffer;
use Email::Sender::Transport::SMTP;
use Date::Calc qw(Days_in_Month);
use Cadi::CadiDB;

my $mailresp	  = 'jerome.cosandey@epfl.ch';
my $mailSF		  = $ENV{'MAIL_SF'};
my $fakeMailSF	  = $ENV{'FAKE_MAIL_EXPORT'};
my $forceMonth	  = $ENV{'FAKE_MONTH'};
my $beginDate  	  = $ENV{'BEGIN_DATE'};
my $endDate  	  = $ENV{'END_DATE'};
my $sasl_username = $ENV{'SASL_USERNAME'};
my $sasl_password = $ENV{'SASL_PASSWORD'};

my @diiCFs 	= (
		',0060,0061,0081,0082,0086,0087,0041,0042,0043,0044,0045,0046,0047,0048,0049,0064,0063,',
		',2018,2019,2010,2011,2012,2015,',
		);
my $outfile 	= '/tmp/cvis_fact.txt';

my %prices 		= (
		'50',		'15',
		'100',	'25',
		'200',	'30',
		'300',	'35',
);

my $fake	= $fakeMailSF ? 1 : 0;	#	- non mails, no DB update
$mailSF     = $fake ? $fakeMailSF : $mailSF;

warn "$fake";
#	- yesterday
my ($sec,$min,$hour,$mday,$month,$year,$wday,$yday,$isdst) = localtime(time - 86400);

# Increment because month starts at 0
$month = $forceMonth ? $forceMonth : $month++;

$year 	 	 += 1900;
my $startdate = $beginDate ? $beginDate : sprintf "%04d-%02d-01", $year, $month;
my $nbdaysmon	= Days_in_Month($year,$month);
my $enddate		= $endDate ? $endDate : sprintf "%04d-%02d-%02d 23:59:59", $year, $month, $nbdaysmon;

print qq{Facturation businesscards	du : $startdate au : $enddate
};

open (OUT, ">$outfile") || die "err open $outfile : $!";
my $output = "Fonds;Compte;CC;CF;OIS;NoDV;OTP;Cop;Fonds;Compte;CC;CF;OIS;NoDV;OTP;Cop;Montant;Texte\n";

my $dbcards  = new Cadi::CadiDB ( dbname => 'businesscard',	utf8 => 1, );
my $sql = qq{select * from cmds where etat='4' and date between ? and ?};
my $sth = $dbcards->prepare($sql);
die '**ERR db_error prepare' unless $sth;
my $rv = $sth->execute( $startdate, $enddate);
die '** ERR db_error execute' unless $rv;

my $orders;
while (my $cmd = $sth->fetchrow_hashref) {
	my $quant = $cmd->{quantite};
	my $nocmd = $cmd->{nocmd};
	my $cf	 	= $cmd->{cf};
	my $total	= $prices{$quant};
	my $descr = "$nocmd/$cmd->{scipertodo} ($cmd->{firstname} $cmd->{name})";
	my $ois;
			$ois	  = '1051' if ($diiCFs[0] =~ /,$cf,/) ;
			$ois 	= '2023' if ($diiCFs[1] =~ /,$cf,/) ;
	my $txt = sprintf "%s;539000;;;%s;;;;535742;709000;;;1051;;;;%.2f;%s\n", $cmd->{fond}, $ois, $total, $descr;
	if ($total) {
		printf OUT $txt;
		warn  qq{$txt};
		$orders .= qq{$cmd->{nocmd},};
	}
}
close OUT;

#	- update order status to payed
unless ($fake) {
	$orders =~ s/,$//;
	$orders =~ s/,/','/g;
	my $sql = qq{update cmds set etat='5' where nocmd in ('$orders')};
	my $sth = $dbcards->prepare($sql);
	die '**ERR db_error prepare' unless $sth;
	my $rv = $sth->execute();
	die '** ERR db_error execute' unless $rv;
}

# https://stackoverflow.com/a/59882532
my $from = $sasl_username . '@epfl.ch';
my $subj = "Commandes de cartes de visites: facturation $month/$year";
my $text = "Commandes de cartes de visites: facturation $month/$year";
my $mail = Email::Stuffer->to($mailSF)->from($from)->subject($subj)->text_body($text);

my $transport = Email::Sender::Transport::SMTP->new({
	host => 'mail.epfl.ch',
	sasl_username => $sasl_username,
	sasl_password => $sasl_password,
	ssl => 1,
	port => 465,
	debug => 1
});

$mail->attach_file($outfile);
$mail->transport($transport);
$mail->send_or_die;

print qq{mail envoyé à : $mailSF
};
